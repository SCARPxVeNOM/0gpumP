const { ethers } = require('hardhat');

async function main() {
  console.log('🚀 Quick Deploy to 0G Galileo Testnet...');

  const [deployer] = await ethers.getSigners();
  console.log('Deployer:', deployer.address);
  
  const balance = await deployer.getBalance();
  console.log('Balance:', ethers.utils.formatEther(balance), '0G');

  if (balance.lt(ethers.utils.parseEther('0.05'))) {
    console.log('❌ Insufficient balance. Need at least 0.05 0G for deployment.');
    console.log('💡 Get testnet tokens from: https://faucet.0g.ai');
    process.exit(1);
  }

  try {
    // Deploy WETH9
    console.log('\n📦 Deploying WETH9...');
    const WETH = await ethers.getContractFactory('WETH9');
    const weth = await WETH.deploy({
      gasPrice: ethers.utils.parseUnits('2', 'gwei')
    });
    await weth.deployed();
    console.log('✅ WETH9 deployed to:', weth.address);

    // Deploy Factory
    console.log('\n🏭 Deploying UniswapV2Factory...');
    const Factory = await ethers.getContractFactory('UniswapV2Factory');
    const factory = await Factory.deploy(deployer.address, {
      gasPrice: ethers.utils.parseUnits('2', 'gwei')
    });
    await factory.deployed();
    console.log('✅ Factory deployed to:', factory.address);

    // Deploy Router
    console.log('\n🛣️ Deploying UniswapV2Router02...');
    const Router = await ethers.getContractFactory('UniswapV2Router02');
    const router = await Router.deploy(factory.address, weth.address, {
      gasPrice: ethers.utils.parseUnits('2', 'gwei')
    });
    await router.deployed();
    console.log('✅ Router deployed to:', router.address);

    // Save deployment info
    const deploymentInfo = {
      network: '0g-galileo-testnet',
      chainId: 16602,
      deployer: deployer.address,
      wethAddress: weth.address,
      factoryAddress: factory.address,
      routerAddress: router.address,
      deploymentTime: new Date().toISOString()
    };

    const fs = require('fs');
    fs.writeFileSync('deployment-config.json', JSON.stringify(deploymentInfo, null, 2));
    console.log('\n💾 Deployment info saved to deployment-config.json');

    // Update trading config
    const tradingConfig = `// Auto-generated by quickDeploy.js
export const TRADING_CONFIG = {
  FACTORY_ADDRESS: '${factory.address}',
  ROUTER_ADDRESS: '${router.address}',
  WETH_ADDRESS: '${weth.address}',
  AUTO_TRADING_FACTORY_ADDRESS: '',
  NETWORK: '0g-galileo-testnet',
  RPC_URL: 'https://evmrpc-testnet.0g.ai',
  CHAIN_ID: 16602
};`;

    fs.writeFileSync('lib/trading-config.ts', tradingConfig);
    console.log('✅ Updated lib/trading-config.ts');

    console.log('\n🎉 Deployment completed successfully!');
    console.log('📋 Contract Addresses:');
    console.log(`   WETH: ${weth.address}`);
    console.log(`   Factory: ${factory.address}`);
    console.log(`   Router: ${router.address}`);

  } catch (error) {
    console.error('❌ Deployment failed:', error);
    process.exit(1);
  }
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
